// <auto-generated />
using System;
using AoApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AoApi.Data.Migrations
{
    [DbContext(typeof(AOContext))]
    partial class AOContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AoApi.Data.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<DateTimeOffset?>("DeletedOn");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("JobId");

                    b.Property<string>("LastName");

                    b.Property<DateTimeOffset?>("ModifiedOn");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AoApi.Data.Models.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<DateTimeOffset?>("DeletedOn");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("JobTitle");

                    b.Property<DateTimeOffset?>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("AoApi.Data.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTime>("EndHour");

                    b.Property<bool>("IsHoliday");

                    b.Property<bool>("IsWeekend");

                    b.Property<DateTimeOffset?>("ModifiedOn");

                    b.Property<DateTime>("StartHour");

                    b.Property<DateTime>("WorkDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("AoApi.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<DateTimeOffset?>("DeletedOn");

                    b.Property<string>("Email");

                    b.Property<Guid>("EmployeeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset?>("ModifiedOn");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AoApi.Data.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTimeOffset?>("ModifiedOn");

                    b.Property<string>("PaymentMethod")
                        .IsRequired();

                    b.Property<int>("Salary");

                    b.Property<int>("Wage");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("AoApi.Data.Models.Workhours", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTimeOffset?>("ModifiedOn");

                    b.Property<int>("TotalHoursThisPaycheck");

                    b.Property<int>("TotalOvertimeHoursThisPaycheck");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Workhours");
                });

            modelBuilder.Entity("AoApi.Data.Models.Employee", b =>
                {
                    b.HasOne("AoApi.Data.Models.Job", "Job")
                        .WithOne("Employee")
                        .HasForeignKey("AoApi.Data.Models.Employee", "JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AoApi.Data.Models.Schedule", b =>
                {
                    b.HasOne("AoApi.Data.Models.Employee", "Employee")
                        .WithMany("Schedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AoApi.Data.Models.User", b =>
                {
                    b.HasOne("AoApi.Data.Models.Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("AoApi.Data.Models.User", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AoApi.Data.Models.Wallet", b =>
                {
                    b.HasOne("AoApi.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AoApi.Data.Models.Workhours", b =>
                {
                    b.HasOne("AoApi.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
